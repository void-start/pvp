window.addEventListener("load", () => {
  if (window.Telegram.WebApp) {
    Telegram.WebApp.expand();
    console.log("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:", Telegram.WebApp.initDataUnsafe.user);
  }

  const app = document.getElementById("app");
  const battle = document.getElementById("battle-screen");
  const attackContainer = document.getElementById("attack-artifacts");
  const defenseContainer = document.getElementById("defense-artifacts");

  const attackArtifacts = ["–ú–µ—á", "–û–≥–Ω–µ–Ω–Ω—ã–π —à–∞—Ä", "–ò–≥–ª–∞ —Ç—å–º—ã"];
  const defenseArtifacts = ["–©–∏—Ç", "–ú–∞–≥–∏—á–µ—Å–∫–∏–π –±–∞—Ä—å–µ—Ä", "–ù–µ–π—Ç—Ä–∞–ª–∏–∑–∞—Ç–æ—Ä"];

  let selectedAttack = null;
  let selectedDefense = null;

  // –ü–æ–∫–∞–∑ –±–∏—Ç–≤—ã
  document.getElementById("start-btn").onclick = () => {
    app.style.display = "none";
    battle.style.display = "block";
    renderArtifacts();
  };

  function renderArtifacts() {
    attackContainer.innerHTML = "";
    defenseContainer.innerHTML = "";

    attackArtifacts.forEach((name, idx) => {
      const div = document.createElement("div");
      div.className = "artifact";
      div.innerText = name;
      div.onclick = () => {
        selectedAttack = idx;
        highlightSelection(attackContainer, idx);
      };
      attackContainer.appendChild(div);
    });

    defenseArtifacts.forEach((name, idx) => {
      const div = document.createElement("div");
      div.className = "artifact";
      div.innerText = name;
      div.onclick = () => {
        selectedDefense = idx;
        highlightSelection(defenseContainer, idx);
      };
      defenseContainer.appendChild(div);
    });
  }

  function highlightSelection(container, selectedIdx) {
    const children = container.children;
    for (let i = 0; i < children.length; i++) {
      children[i].classList.toggle("selected", i === selectedIdx);
    }
  }

  document.getElementById("confirm-btn").onclick = () => {
    if (selectedAttack === null || selectedDefense === null) {
      alert("–í—ã–±–µ—Ä–∏ –æ–±–∞ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–∞!");
      return;
    }

    const attack = attackArtifacts[selectedAttack];
    const defense = defenseArtifacts[selectedDefense];

    alert(`–í—ã –≤—ã–±—Ä–∞–ª–∏: \nüó° –ê—Ç–∞–∫–∞: ${attack}\nüõ° –ó–∞—â–∏—Ç–∞: ${defense}`);

    // –ó–¥–µ—Å—å –ø–æ–∑–∂–µ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–∫–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä
  };
});
